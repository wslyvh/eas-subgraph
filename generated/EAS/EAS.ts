// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Attested extends ethereum.Event {
  get params(): Attested__Params {
    return new Attested__Params(this);
  }
}

export class Attested__Params {
  _event: Attested;

  constructor(event: Attested) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get attester(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get uuid(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get schema(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class Revoked extends ethereum.Event {
  get params(): Revoked__Params {
    return new Revoked__Params(this);
  }
}

export class Revoked__Params {
  _event: Revoked;

  constructor(event: Revoked) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get attester(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get uuid(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get schema(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class EAS__getAttestationResultValue0Struct extends ethereum.Tuple {
  get uuid(): Bytes {
    return this[0].toBytes();
  }

  get schema(): Bytes {
    return this[1].toBytes();
  }

  get refUUID(): Bytes {
    return this[2].toBytes();
  }

  get time(): BigInt {
    return this[3].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[4].toBigInt();
  }

  get revocationTime(): BigInt {
    return this[5].toBigInt();
  }

  get recipient(): Address {
    return this[6].toAddress();
  }

  get attester(): Address {
    return this[7].toAddress();
  }

  get data(): Bytes {
    return this[8].toBytes();
  }
}

export class EAS extends ethereum.SmartContract {
  static bind(address: Address): EAS {
    return new EAS("EAS", address);
  }

  VERSION(): string {
    let result = super.call("VERSION", "VERSION():(string)", []);

    return result[0].toString();
  }

  try_VERSION(): ethereum.CallResult<string> {
    let result = super.tryCall("VERSION", "VERSION():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getAttestation(uuid: Bytes): EAS__getAttestationResultValue0Struct {
    let result = super.call(
      "getAttestation",
      "getAttestation(bytes32):((bytes32,bytes32,bytes32,uint32,uint32,uint32,address,address,bytes))",
      [ethereum.Value.fromFixedBytes(uuid)]
    );

    return changetype<EAS__getAttestationResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getAttestation(
    uuid: Bytes
  ): ethereum.CallResult<EAS__getAttestationResultValue0Struct> {
    let result = super.tryCall(
      "getAttestation",
      "getAttestation(bytes32):((bytes32,bytes32,bytes32,uint32,uint32,uint32,address,address,bytes))",
      [ethereum.Value.fromFixedBytes(uuid)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<EAS__getAttestationResultValue0Struct>(value[0].toTuple())
    );
  }

  getEIP712Verifier(): Address {
    let result = super.call(
      "getEIP712Verifier",
      "getEIP712Verifier():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getEIP712Verifier(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getEIP712Verifier",
      "getEIP712Verifier():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getSchemaRegistry(): Address {
    let result = super.call(
      "getSchemaRegistry",
      "getSchemaRegistry():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getSchemaRegistry(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getSchemaRegistry",
      "getSchemaRegistry():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isAttestationValid(uuid: Bytes): boolean {
    let result = super.call(
      "isAttestationValid",
      "isAttestationValid(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(uuid)]
    );

    return result[0].toBoolean();
  }

  try_isAttestationValid(uuid: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isAttestationValid",
      "isAttestationValid(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(uuid)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get registry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get verifier(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AttestCall extends ethereum.Call {
  get inputs(): AttestCall__Inputs {
    return new AttestCall__Inputs(this);
  }

  get outputs(): AttestCall__Outputs {
    return new AttestCall__Outputs(this);
  }
}

export class AttestCall__Inputs {
  _call: AttestCall;

  constructor(call: AttestCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get schema(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get expirationTime(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get refUUID(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class AttestCall__Outputs {
  _call: AttestCall;

  constructor(call: AttestCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class AttestByDelegationCall extends ethereum.Call {
  get inputs(): AttestByDelegationCall__Inputs {
    return new AttestByDelegationCall__Inputs(this);
  }

  get outputs(): AttestByDelegationCall__Outputs {
    return new AttestByDelegationCall__Outputs(this);
  }
}

export class AttestByDelegationCall__Inputs {
  _call: AttestByDelegationCall;

  constructor(call: AttestByDelegationCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get schema(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get expirationTime(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get refUUID(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get attester(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get v(): i32 {
    return this._call.inputValues[6].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[8].value.toBytes();
  }
}

export class AttestByDelegationCall__Outputs {
  _call: AttestByDelegationCall;

  constructor(call: AttestByDelegationCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class RevokeCall extends ethereum.Call {
  get inputs(): RevokeCall__Inputs {
    return new RevokeCall__Inputs(this);
  }

  get outputs(): RevokeCall__Outputs {
    return new RevokeCall__Outputs(this);
  }
}

export class RevokeCall__Inputs {
  _call: RevokeCall;

  constructor(call: RevokeCall) {
    this._call = call;
  }

  get uuid(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class RevokeCall__Outputs {
  _call: RevokeCall;

  constructor(call: RevokeCall) {
    this._call = call;
  }
}

export class RevokeByDelegationCall extends ethereum.Call {
  get inputs(): RevokeByDelegationCall__Inputs {
    return new RevokeByDelegationCall__Inputs(this);
  }

  get outputs(): RevokeByDelegationCall__Outputs {
    return new RevokeByDelegationCall__Outputs(this);
  }
}

export class RevokeByDelegationCall__Inputs {
  _call: RevokeByDelegationCall;

  constructor(call: RevokeByDelegationCall) {
    this._call = call;
  }

  get uuid(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get attester(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get v(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class RevokeByDelegationCall__Outputs {
  _call: RevokeByDelegationCall;

  constructor(call: RevokeByDelegationCall) {
    this._call = call;
  }
}
